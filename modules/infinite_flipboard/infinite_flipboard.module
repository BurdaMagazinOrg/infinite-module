<?php

/**
 * @file
 * Contains infinite_flipboard_node_view.module.
 */

use Drupal\Component\Utility\UrlHelper;
use Drupal\Core\Url;
use Drupal\views\ViewExecutable;

function infinite_flipboard_views_post_render(ViewExecutable $view, &$output, $cache) {
  /** @var \Drupal\views\Plugin\views\display\DisplayPluginBase $display */
  $display = $view->getDisplay();

  if($view->id() == 'infinite_taxonomy_term' && $display->display['id'] == 'flipboard_rss') {
    foreach ($output['#rows'] as $idx => $row) {
      $url = Url::fromUri($row['#row']->link, [
               'query' => [
                 'utm_source' => 'Flipboard',
                 'utm_campaign' => 'flipboard_rss_feed',
                 'utm_medium' => 'referral',
               ]
             ]);
      $output['#rows'][$idx]['#row']->link = $url->toString();
    }
  }
}

/**
 * Prepares variables for RSS feed templates.
 *
 * Default template: views-view-rss.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - view: A ViewExecutable object.
 *   - rows: The raw row data.
 */
function infinite_flipboard_preprocess_views_view_flipboard_rss(array &$variables) {
  $view = $variables['view'];
  if ($view->id() == 'infinite_taxonomy_term' && $view->getDisplay()->display['id'] == 'flipboard_rss') {
    // For some reason, the link comes out with an encoded asterisk at the
    // end, we replace it and use the aliased path.
    $actual_link = Url::fromRoute('<current>')->setAbsolute()->toString();
    $variables['link'] = $actual_link;
  }
}
